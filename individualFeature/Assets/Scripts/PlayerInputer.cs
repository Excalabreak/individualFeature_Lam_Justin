//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scripts/PlayerInputer.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputer : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputer()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputer"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""77753093-9a34-4793-a16d-8d55fa1e48e2"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""5a389ab5-0490-4371-958b-a8e809e83138"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""a39610a2-7470-45b6-a4c6-d40f720c2db2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""3fc92178-cfd5-4ba4-a574-dbbea9975549"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""51a533f2-3960-4834-b81d-d9765f2d12e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FrontPunch"",
                    ""type"": ""Button"",
                    ""id"": ""41af137f-38cf-4d23-a89a-3918d2f02c19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackPunch"",
                    ""type"": ""Button"",
                    ""id"": ""7f55ed0f-7095-4498-a63f-071a8ab080cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FrontKick"",
                    ""type"": ""Button"",
                    ""id"": ""a8d2e39b-6834-4a79-b78f-f7da8e8ee89b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BackKick"",
                    ""type"": ""Button"",
                    ""id"": ""aaffffb4-f165-427d-809d-d5e97101ec9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Amp"",
                    ""type"": ""Button"",
                    ""id"": ""c3a08b1c-7f6d-41d3-bc72-6961b411a2cf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e5ade9c2-1a35-4156-81cc-2fba84d5df16"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FrontPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ee7e9a9-d6ad-4111-aa5d-6a871dbf722e"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackPunch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c04f218e-e0d7-4614-a941-2b8638f9166a"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FrontKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""214d4cd6-c3b6-42cb-813a-b4022fc9fdb5"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BackKick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66d86647-7dac-4483-bf3a-694fd5bd94ab"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Amp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88ac13cd-1a36-4f1c-ad93-bae28bca038c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bdce3c0-bd3e-4aa0-aa9d-800c3fcba451"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89f91bc5-b77e-4c1d-99d3-339a61981f8f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d575a0e4-2856-483f-9e3b-006d1b8f00c8"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Left = m_Player.FindAction("Left", throwIfNotFound: true);
        m_Player_Right = m_Player.FindAction("Right", throwIfNotFound: true);
        m_Player_FrontPunch = m_Player.FindAction("FrontPunch", throwIfNotFound: true);
        m_Player_BackPunch = m_Player.FindAction("BackPunch", throwIfNotFound: true);
        m_Player_FrontKick = m_Player.FindAction("FrontKick", throwIfNotFound: true);
        m_Player_BackKick = m_Player.FindAction("BackKick", throwIfNotFound: true);
        m_Player_Amp = m_Player.FindAction("Amp", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Left;
    private readonly InputAction m_Player_Right;
    private readonly InputAction m_Player_FrontPunch;
    private readonly InputAction m_Player_BackPunch;
    private readonly InputAction m_Player_FrontKick;
    private readonly InputAction m_Player_BackKick;
    private readonly InputAction m_Player_Amp;
    public struct PlayerActions
    {
        private @PlayerInputer m_Wrapper;
        public PlayerActions(@PlayerInputer wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Left => m_Wrapper.m_Player_Left;
        public InputAction @Right => m_Wrapper.m_Player_Right;
        public InputAction @FrontPunch => m_Wrapper.m_Player_FrontPunch;
        public InputAction @BackPunch => m_Wrapper.m_Player_BackPunch;
        public InputAction @FrontKick => m_Wrapper.m_Player_FrontKick;
        public InputAction @BackKick => m_Wrapper.m_Player_BackKick;
        public InputAction @Amp => m_Wrapper.m_Player_Amp;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Crouch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Left.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRight;
                @FrontPunch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFrontPunch;
                @FrontPunch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFrontPunch;
                @FrontPunch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFrontPunch;
                @BackPunch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackPunch;
                @BackPunch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackPunch;
                @BackPunch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackPunch;
                @FrontKick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFrontKick;
                @FrontKick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFrontKick;
                @FrontKick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFrontKick;
                @BackKick.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackKick;
                @BackKick.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackKick;
                @BackKick.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBackKick;
                @Amp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAmp;
                @Amp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAmp;
                @Amp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAmp;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
                @FrontPunch.started += instance.OnFrontPunch;
                @FrontPunch.performed += instance.OnFrontPunch;
                @FrontPunch.canceled += instance.OnFrontPunch;
                @BackPunch.started += instance.OnBackPunch;
                @BackPunch.performed += instance.OnBackPunch;
                @BackPunch.canceled += instance.OnBackPunch;
                @FrontKick.started += instance.OnFrontKick;
                @FrontKick.performed += instance.OnFrontKick;
                @FrontKick.canceled += instance.OnFrontKick;
                @BackKick.started += instance.OnBackKick;
                @BackKick.performed += instance.OnBackKick;
                @BackKick.canceled += instance.OnBackKick;
                @Amp.started += instance.OnAmp;
                @Amp.performed += instance.OnAmp;
                @Amp.canceled += instance.OnAmp;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
        void OnFrontPunch(InputAction.CallbackContext context);
        void OnBackPunch(InputAction.CallbackContext context);
        void OnFrontKick(InputAction.CallbackContext context);
        void OnBackKick(InputAction.CallbackContext context);
        void OnAmp(InputAction.CallbackContext context);
    }
}
